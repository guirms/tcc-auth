# üõ°Ô∏è M√©todos de Autentica√ß√£o de Login em Aplica√ß√µes Web

Este reposit√≥rio cont√©m o c√≥digo-fonte e os experimentos realizados no Trabalho de Conclus√£o de Curso (TCC) intitulado **"M√©todos de Autentica√ß√£o de Login em Aplica√ß√µes Web: uma an√°lise de seguran√ßa"**, desenvolvido por Bruna Savi e Guilherme Machado Santana, sob orienta√ß√£o do professor Rodrigo Cesar Nunes Maciel.

## üéØ Objetivo

Analisar e comparar diferentes m√©todos de autentica√ß√£o utilizados em aplica√ß√µes web, destacando suas vulnerabilidades, pontos fortes e limita√ß√µes de acordo com pr√°ticas seguras de desenvolvimento e as diretrizes da OWASP.

## üîê M√©todos de Autentica√ß√£o Implementados

Cada m√©todo foi implementado em uma API REST utilizando Python com o microframework Flask:

- **HTTP Basic Authentication**
- **HTTP Digest Authentication**
- **Autentica√ß√£o baseada em Sess√£o (Cookies)**
- **JSON Web Token (JWT)**
- **OAuth 2.0 com provedor Google**

## üß™ Estrutura de Testes

Cada m√©todo foi submetido a testes de seguran√ßa controlados, incluindo:
- Captura de credenciais via Wireshark
- Ataques XSS e roubo de cookies (session hijacking)
- Manipula√ß√£o e falsifica√ß√£o de JWT
- Explora√ß√£o de falhas em redirecionamentos (Open Redirect)
- Simula√ß√µes de CSRF no OAuth 2.0

Os testes foram realizados **intencionalmente em ambiente HTTP**, para permitir a intercepta√ß√£o do tr√°fego.

## üß∞ Tecnologias Utilizadas

- [Python](https://www.python.org/)
- [Flask](https://flask.palletsprojects.com/)
- [Postman](https://www.postman.com/)
- [Wireshark](https://www.wireshark.org/)
- [Burp Suite Community Edition](https://portswigger.net/burp)
- [Google Chrome / Opera GX (para testes de navegador)]
- [Google Authenticator](https://support.google.com/accounts/answer/1066447?hl=pt-BR)